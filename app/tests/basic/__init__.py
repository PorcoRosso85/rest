from core.tests.test_urls import TestUserView

test_design_for_basic = {
    "データベーステスト": {
        "項目": ["トランザクション動作確認", "バックアップ・復元テスト"],
    },
    "ユーザーエクスペリエンステスト": {
        "項目": ["ユーザビリティテスト", "アクセシビリティテスト"],
    },
    "バックアップ・復旧テスト": {
        "項目": ["データのバックアップ・復元プロセス検証"],
    },
    "セキュリティテスト": [
        TestUserView.test200_ログインユーザーの情報を取得できる,
        TestUserView.test400_ログインユーザー以外のユーザーが情報を取得できない,
        "クロスサイトリクエストフォージェリ(CSRF)攻撃に対する防御",
        "SQLインジェクション攻撃に対する防御",
        "セッションハイジャック攻撃に対する防御",
        "HTTPSを使用している",
    ],
    "パフォーマンステスト": [
        "高負荷時でも組織情報の読み込みと更新が適切に機能する",
        "大量の組織メンバーが同時にアクセスしてもシステムが安定している",
        "リソースの限界を超えた場合のシステムの応答を検証",
        "ロードテストを行い同時アクセスに耐えられるか確認する"
        "プロファイリングを使って処理時間やクエリの最適化を分析する"
        "単体テストを実行し、各機能の動作確認とボトルネックの特定を行う"
        "キャッシュを最適化して、データベースへのアクセス回数を減らし、レスポンス時間を改善する"
        "静的ファイルの圧縮やキャッシュ設定を行い、ロード時間を短縮する"
        "データベースのインデックス追加やクエリの最適化を行い、パフォーマンスを向上させる"
        "サーバー設定の最適化とリソース使用効率の向上を図る",
    ],
}
